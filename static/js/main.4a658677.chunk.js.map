{"version":3,"sources":["algorithm/index.js","App.js","reportWebVitals.js","index.js"],"names":["TSP","matrix","path","len","console","log","this","length","key","mstSet","min_index","min","Infinity","v","parent","graph","res","nodes","links","forEach","_","index","push","id","toString","i","undefined","source","target","count","u","minKey","_returnResult","n","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","initialMatrix","App","useState","setMatrix","initialSchema","setInitialSchema","schema","setSchema","minPath","setMinPath","useEffect","newMatrix","j","arr","tsp","solve","newInitSchema","nodeIndexes","el","includes","sumMatrix","reduce","acc","curr","a","c","className","Button","onClick","newArr","map","r","TextField","value","disabled","onChange","e","m","Number","handleChange","pop","data","config","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a658677.chunk.js","sourcesContent":["class TSP {\n  matrix = [];\n  path = 0;\n  len = 0;\n\n  constructor(matrix) {\n    console.log(matrix)\n    this.matrix = matrix;\n    this.len = matrix.length;\n  }\n\n  get getMatrix() {\n    return this.matrix;\n  }\n\n  minKey(key, mstSet) {\n    let min = Infinity, min_index;  \n  \n    for (let v = 0; v < this.len; v++) {\n      if (mstSet[v] === false && key[v] < min) {\n        min = key[v];\n        min_index = v;\n      }\n    }\n    return min_index;  \n  } \n\n  static toString(n) {\n    return (n + 1).toString()\n  }\n\n  _returnResult(parent, graph) {  \n    const res = {\n      nodes: [],\n      links: []\n    };\n\n    parent.forEach((_,index) => {\n      res.nodes.push({ id: TSP.toString(index) });\n    });\n\n    for (let i = 1; i < graph.length; i++) {\n      if (parent[i] !== undefined && graph[i][parent[i]] !== undefined) {\n        console.log(parent[i], \" - \", i, \" \\t\", graph[i][parent[i]],\" \\n\");\n        this.path += graph[i][parent[i]]; \n      \n        res.links.push({ source: TSP.toString(parent[i]), target: TSP.toString(i) });\n      }\n    } \n\n    return res;\n  }  \n\n  solve() {\n    const parent = [];  \n    const key = [];    \n    const mstSet = [];  \n\n    for (let i = 0; i < this.len; i++) { \n      key[i] = Infinity;\n      mstSet[i] = false;\n    }  \n    \n    key[0] = 0;  \n    parent[0] = -1; \n\n    for (let count = 0; count < this.len - 1; count++) {    \n      let u = this.minKey(key, mstSet);  \n      mstSet[u] = true;  \n  \n      for (let v = 0; v < this.len; v++) {\n        if (this.matrix[u][v] && mstSet[v] === false && this.matrix[u][v] < key[v]) {\n          parent[v] = u;\n          key[v] = this.matrix[u][v];\n        }\n      }\n    }  \n    \n    return this._returnResult(parent, this.matrix);  \n  }  \n\n}\n\nexport default TSP;\n","import { useEffect, useState } from 'react';\nimport { Graph } from \"react-d3-graph\";\nimport TextField from '@material-ui/core/TextField';\n\nimport TSP from './algorithm';\n\nimport './App.css';\nimport { Button } from '@material-ui/core';\n \nconst myConfig = {\n    nodeHighlightBehavior: true,\n    node: {\n        color: \"green\",\n        size: 300,\n        highlightStrokeColor: \"red\",\n    },\n    link: {\n        highlightColor: \"lightblue\",\n    },\n};\n\n\nconst initialMatrix = [\n  [0, 2, 7, 0, 0, 0, 0],\n  [2, 0, 0, 3, 3, 4, 0],\n  [7, 0, 0, 1, 0, 0, 0],\n  [0, 3, 7, 0, 5, 1, 0],\n  [0, 3, 0, 5, 0, 0, 5],\n  [0, 4, 0, 1, 0, 0, 2],\n  [0, 0, 0, 0, 5, 2, 0]\n];\n\nfunction App() { \n  const [matrix, setMatrix] = useState(initialMatrix);\n  const [initialSchema, setInitialSchema] = useState(null); \n  const [schema, setSchema] = useState(null);\n  const [minPath, setMinPath] = useState(null);\n\n  useEffect(() => {\n    const newMatrix = [];\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        if (matrix[i][j] > 0) {\n          newMatrix.push(matrix[i]);\n          break;\n        }\n      }\n    }\n\n    newMatrix.forEach(arr => {\n      arr = [...arr];\n      arr.length = newMatrix.length;\n    });\n\n    const tsp = new TSP(newMatrix);\n    setSchema(tsp.solve());\n    setMinPath(tsp.path);\n\n    const newInitSchema = {\n      nodes: [],\n      links: []\n    };\n\n    const nodeIndexes = [];\n\n    for (let j = 0; j < matrix.length; j++) {\n      for (let i = 0; i < matrix.length; i++) {\n        if (matrix[i][j] > 0) {\n          nodeIndexes.push(j);\n          break;\n        }\n      }\n    }    \n\n    nodeIndexes.forEach((el) => {\n      newInitSchema.nodes.push({ id: TSP.toString(el) });\n    });\n\n    for (let i = 0; i < matrix.length; i++) {\n      for (let j = 0; j < matrix.length; j++) {\n        if (nodeIndexes.includes(i) && nodeIndexes.includes(j) && matrix[i][j] > 0) {\n          newInitSchema.links.push({ source: TSP.toString(i), target: TSP.toString(j) });\n        }\n      }\n    }\n\n    setInitialSchema(newInitSchema);\n  }, [matrix]);\n\n  const sumMatrix = (matrix) => matrix.reduce((acc, curr) => acc + curr.reduce((a, c) => a + c, 0), 0);\n\n  const handleChange = (e, i, j) => {\n    const { value } = e.target;\n    const m = [...matrix];\n    m[i][j] = Number(value) || 0;\n    m[j][i] = Number(value) || 0;\n    if (sumMatrix(m) > 0)\n      setMatrix(m);\n  };\n\n  const increaseMatrix = () => {\n    const newMatrix = [...matrix];\n    const len = newMatrix.length;\n    const newArr = [];\n\n    newMatrix.forEach(arr => arr.push(0));\n    for (let i = 0; i <= len; i++) {\n      newArr.push(0);\n    }\n    newMatrix.push(newArr);\n\n    setMatrix(newMatrix);\n  };\n\n  const decreaseMatrix = () => {\n    const newMatrix = [...matrix];\n    newMatrix.pop();\n    newMatrix.forEach(arr => arr.pop());\n    setMatrix(newMatrix);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"form-container\">\n        <h2>Матриця</h2>\n        <Button color=\"primary\" onClick={increaseMatrix}>+</Button>\n        {\n          matrix.map((r, i) => (\n            <div key={i}>\n              {r.map((el, index) =>\n                <TextField\n                  key={index}\n                  value={el}\n                  disabled={i === index}\n                  onChange={(e) => handleChange(e, i, index)}\n                  />\n              )}\n            </div>\n          ))\n        }\n        <Button disabled={matrix.length < 3} color=\"secondary\" onClick={decreaseMatrix}>-</Button>\n      </div>\n      { sumMatrix(matrix) > 0 &&\n        <div className=\"container\">\n          <section>\n            <h2>Початковий граф</h2>\n            {initialSchema && (\n              <Graph\n                id=\"graph-id-0\"\n                data={initialSchema}\n                config={myConfig}\n              />\n            )}\n          </section>\n          <section>\n            {minPath && <h2>Мінімальний шлях = {minPath}</h2>}\n            {schema && (\n              <Graph\n                id=\"graph-id-1\"\n                data={schema}\n                config={myConfig}\n              />\n            )}\n          </section>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}